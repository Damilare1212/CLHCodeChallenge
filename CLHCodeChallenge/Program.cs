using System;
using System.Collections.Generic;
using System.Linq;

namespace CLHCodeChallenge
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("=========================================================================");
            Console.WriteLine("=============      Welcome to CLH Code Challenge!      ==================");
            Console.WriteLine("=========================================================================");



            //Console.WriteLine(CountingValleys.countingValleys(8, "UDDDUDUU"));

            //Console.WriteLine(LongestValidParentheses2.GetLongestValid("((())())(()))(()()(()(()))(()((((()))))))((()())()))()()(()(((((()()()())))()())(()()))((((((())))((()))()()))))(()))())))()))()())((()()))))(()(((((())))))()((()(()(())((((())(())((()()(()())))())(()(())()()))())(()()()))()(((()())(((()()())))(((()()()))(()()))()))()))))))())()()((()(())(()))()((()()()((())))()(((()())(()))())())))(((()))))())))()(())))()())))())()((()))((()))()))(((())((()()()(()((()((())))((()()))())(()()(()))))())((())))(()))()))))))()(()))())(()())))))(()))((())(()((())(((((()()()(()()())))(()())()((()(()()))(()(())((()((()))))))))(()(())()())()(()(()(()))()()()(()()())))(())(()((((()()))())))(())((()(())())))))())()()))(((())))())((()(()))(()()))((())(())))))(()(()((()((()()))))))(()()()(()()()(()(())()))()))(((()(())()())(()))())))(((()))())(()((()))(()((()()()(())()(()())()(())(()(()((((())()))(((()()(((()())(()()()(())()())())(()(()()((()))))()(()))))(((())))()()))(()))((()))))()()))))((((()(())()()()((()))((()))())())(()((()()())))))))()))(((()))))))(()())))(((()))((()))())))(((()(((())))())(()))))(((()(((((((((((((())(((()))((((())())()))())((((())(((())))())(((()))))()())()(())())(()))))()))()()()))(((((())()()((()))())(()))()()(()()))(())(()()))()))))(((())))))((()()(()()()()((())((((())())))))((((((()((()((())())(()((()))(()())())())(()(())(())(()((())((())))(())())))(()()())((((()))))((()(())(()(()())))))))))((()())()()))((()(((()((()))(((((()()()()()(()(()((()(()))(()(()((()()))))()(()()((((((()((()())()))((())()()(((((()(()))))()()((()())((()())()(())((()))()()(()))"));

            //int[] input = { 2, 0, 5, 6, 4, 2, 3 };
            //Console.WriteLine(AreaOfLargestRectangle.LargestArea(input));


            //int[] input = { 1, 0, 0, 3, 0, 4, 5, 0 };
            //Console.WriteLine(MaximumPossibleSumOfPizzaSlice.MaximumSum(input));

            /* var expression = "4 + 5 * 2";
             var vars = "e";
             var ints = 1;
             Console.WriteLine(SimplifiedExpressionToken.ExpressionToken(expression, vars, ints));*/

            //int[] input = { 1, 0, 0, 3, 0, 4, 5, 0 };
            //int[] input = { 1, 0, 2, 3, 0, 4, 5, 0 };
            //int[] input = { 1, 0, 3, 2};
            //DuplicateZeroOccurrence.DuplicateZeros3(input);
            //Console.WriteLine(string.Join(",", input));


            Console.WriteLine(LongestPalindromeInAString.LongestPalindromeLength("ggttreeiiiiottqtxt"));

        }

        
    }
}
